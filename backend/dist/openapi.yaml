---
openapi: 3.0.0
info:
  title: Recipe API
  description: This API is for the recipe app project in the course "Internet Programing Environments" in the Ben Gurion University.
  contact:
    name: Yuval Gorodissky and Noam Azulay
    email: yuvalgor@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://127.0.0.1:3000
    description: SwaggerHub API Auto Mocking
tags:
  - name: auth
    description: Operations to manage authentication
  - name: user
    description: Operations to manage users
  - name: recipe
    description: Operations to manage recipes
  - name: family
    description: Operations to manage family

paths:
  /login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      description: Logs user into the system
      operationId: loginUser
      requestBody:
        description: The user object that needs to be logged in
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
        required: true
      responses:
        "200":
          description: "Login successful"
        "404":
          description: Invalid input
  /register:
    post:
      tags:
        - auth
      summary: Register user
      description: This can only be done by not logged in user.
      operationId: registerUser
      requestBody:
        description: The user object that needs to be registered
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
        required: true
      responses:
        "200":
          description: User created
        "400":
          description: Invalid input
  /Logout:
    post:
      tags:
        - auth
      summary: Logs out current logged in user session
      description: Logs out current logged in user session
      operationId: logoutUser
      responses:
        "200":
          description: logged out successful

  /users/favorite:
    post:
      tags:
        - user
      summary: Add recipe to favorites
      description: Add recipe to favorites
      operationId: addRecipeToFavorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeId:
                  type: integer
                  format: int64
                  example: 654959
                isfav:
                  type: boolean
                  example: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Recipe not found
    get:
      tags:
        - user
      summary: Get all favorite recipes
      description: Returns all favorite recipes
      operationId: getFavoriteRecipes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "400":
          description: There are no favorite recipes
  /users/myRecipes:
    get:
      tags:
        - user
      summary: Get all user recipes
      description: Returns all user recipes
      operationId: getUserRecipes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "400":
          description: There are no user recipes
    post:
      tags:
        - user
      summary: Add recipe
      description: Add recipe
      operationId: addRecipe
      requestBody:
        description: Recipe object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InsertRecipe"
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid input
  /users/search:
    get:
      tags:
        - user
      summary: Search recipes
      description: Search recipes
      operationId: searchRecipes
      parameters:
        - name: name
          in: query
          description: search string
          example: Falafel
          required: true
          schema:
            type: string
        - name: number
          in: query
          description: number of recipes to return
          example: 10
          required: false
          schema:
            type: integer
            default: 5
            minimum: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "400":
          description: Invalid input

  /users/random:
    get:
      tags:
        - user
      summary: Get random recipes
      description: Get random recipes
      operationId: getRandomRecipes
      parameters:
        - name: number
          in: query
          description: number of recipes to return
          example: 10
          required: false
          schema:
            type: integer
            default: 3
            minimum: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "400":
          description: Invalid input
  /users/{recipeId}:
    get:
      tags:
        - user
      summary: Get recipe by ID
      description: Get recipe by ID
      operationId: getRecipeById
      parameters:
        - name: recipeId
          in: path
          description: ID of recipe to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Invalid ID supplied
        "404":
          description: Recipe not found
  /users/seen:
    get:
      tags:
        - user
      summary: Get last  3 seen recipes
      description: Get last  3 seen recipes
      operationId: getSeenRecipes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"

  /users/ingerdients:
    get:
      tags:
        - user
      summary: search for ingredient by name
      description: search for ingredient by name
      operationId: searchIngredients
      parameters:
        - name: name
          in: query
          description: search string
          example: tomato
          required: true
          schema:
            type: string
        - name: number
          in: query
          description: number of ingredients to return
          example: 5
          required: false
          schema:
            type: integer
            default: 3
            minimum: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 1
                    name:
                      type: string
                      example: tomato
                    image:
                      type: string
                      example: tomato.jpg

        "400":
          description: Invalid input

  /users/recipe:
    get:
      tags:
        - user
      summary: get recipe of user
      description: get recipe of user
      operationId: getRecipeOfUser
      parameters:
        - name: recipe_id
          in: query
          description: ID of recipe to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Invalid ID supplied
        "404":
          description: Recipe not found

  /users/family/recipe:
    get:
      tags:
        - family
      summary: get recipe of family
      description: get recipe of family
      operationId: getRecipeOfFamily
      parameters:
        - name: recipe_id
          in: query
          description: ID of recipe to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
        - name: family_id
          in: query
          description: ID of family to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Invalid ID supplied
        "404":
          description: Recipe not found
  /users/family/search:
    get:
      tags:
        - family

      summary: search for family by name
      description: search for family by name
      operationId: searchFamily
      parameters:
        - name: family_name
          in: query
          description: search string
          example: Azulay
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Family"
        "400":
          description: Invalid input

  /users/family/recipes:
    get:
      tags:
        - family

      summary: Get all family recipes
      description: Returns all family recipes
      operationId: getFamilyRecipes
      parameters:
        - name: family_id
          in: query
          description: ID of family to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipeFamily"
        "400":
          description: There are no family recipes
  /users/family/members:
    get:
      tags:
        - family

      summary: Get all family members
      description: Returns all family members
      operationId: getFamilyMembers
      parameters:
        - name: family_id
          in: query
          description: ID of family to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserPreview"
        "400":
          description: There are no family members
  /users/family/add:
    post:
      tags:
        - family

      summary: Add member to family
      description: Add member to family
      operationId: addMemberToFamily
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                family_id:
                  type: integer
                  example: 1
                  description: ID of family to return
                isAdd:
                  type: boolean
                  example: true
                  description: true if add, false if remove
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid input

  /users/family/myfamilies:
    get:
      tags:
        - family

      summary: Get all user families
      description: Returns all user families
      operationId: getUserFamilies
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    family_name:
                      type: string
                      example: Azulay
                      description: name of family
                    family_id:
                      type: integer
                      example: 1
                      description: ID of family
        "400":
          description: There are no user families

  /users/family/create:
    post:
      tags:
        - family

      summary: Create new family
      description: Create new family
      operationId: createFamily
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Family"
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid input
  /users/family/addrecipe:
    post:
      tags:
        - family
      summary: Add recipe to family
      description: Add recipe to family
      operationId: addRecipeToFamily
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FamilyRecipe"
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid input
  /recipes/random:
    get:
      tags:
        - recipe
      summary: Get random recipes
      description: Get random recipes
      operationId: getRandomRecipes
      parameters:
        - name: number
          in: query
          description: number of recipes to return
          example: 5
          required: false
          schema:
            type: integer
            default: 3
            minimum: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "400":
          description: Invalid input
  /recipes/search:
    get:
      tags:
        - recipe
      summary: search for recipe by name
      description: search for recipe by name
      operationId: searchRecipes
      parameters:
        - name: query
          in: query
          description: search string
          example: pasta
          required: true
          schema:
            type: string
        - name: number
          in: query
          description: number of recipes to return
          example: 5
          required: false
          schema:
            type: integer
            default: 3
            minimum: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PreviewRecipe"
        "400":
          description: Invalid input
  /recipes/{recipeId}:
    get:
      tags:
        - recipe
      summary: Get recipe by ID
      description: Get recipe by ID
      operationId: getRecipeById
      parameters:
        - name: recipeId
          in: path
          description: ID of recipe to return
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Invalid ID supplied
        "404":
          description: Recipe not found

components:
  schemas:
    Recipeid:
      required:
        - recipe_id
      properties:
        recipe_id:
          description: Recipe ID
          type: integer
          format: int64
          example: 1
    PreviewRecipe:
      required:
        - glutenFree
        - imageURL
        - title
        - readyInMinutes
        - vegiterian
        - vegan
        - favorite
        - seen
        - numberOfServings
      type: object
      properties:
        imageURL:
          type: object
          description: image of the recipe
          example: https://spoonacular.com/recipeImages/716429-556x370.jpg
        title:
          type: string
          description: name of the recipe
          example: Falafel
        readyInMinutes:
          minimum: 0
          type: integer
          description: time to cook in minutes
          example: 20
        vegan:
          type: boolean
          description: is the recipe vegan
          example: true
        vegiterian:
          type: boolean
          description: is the recipe vegiterian
          example: true
        glutenFree:
          type: boolean
          description: is the recipe gluten free
          example: true
        favorite:
          type: boolean
          description: is the recipe favorite
          example: true
        seen:
          type: boolean
          description: is the recipe seen
          example: true
        numberOfServings:
          type: integer
          description: number of servings
          example: 4
      description: preview details of the recipe
    PreviewRecipeFamily:
      required:
        - glutenFree
        - imageURL
        - title
        - readyInMinutes
        - vegiterian
        - vegan
        - favorite
        - seen
        - family_id
        - data
        - numberOfServings
      type: object
      properties:
        imageURL:
          type: object
          description: image of the recipe
          example: https://spoonacular.com/recipeImages/716429-556x370.jpg
        title:
          type: string
          description: name of the recipe
          example: Falafel
        readyInMinutes:
          minimum: 0
          type: integer
          description: time to cook in minutes
          example: 20
        vegan:
          type: boolean
          description: is the recipe vegan
          example: true
        vegiterian:
          type: boolean
          description: is the recipe vegiterian
          example: true
        glutenFree:
          type: boolean
          description: is the recipe gluten free
          example: true
        favorite:
          type: boolean
          description: is the recipe favorite
          example: true
        seen:
          type: boolean
          description: is the recipe seen
          example: true
        family_id:
          type: integer
          description: family id
          example: 1
        numberOfServings:
          type: integer
          description: number of servings
          example: 4
        data:
          type: string
          description: recipe data
          example: this recipe made in holidays and it was very good
      description: preview details of the recipe

    InsertRecipeDetails:
      required:
        - glutenfree
        - imageURL
        - name
        - readyInMinutes
        - vegiterian
        - vegan
      type: object
      properties:
        imageURL:
          type: object
          description: image of the recipe
          example: https://spoonacular.com/recipeImages/716429-556x370.jpg
        name:
          type: string
          description: name of the recipe
          example: Falafel
        readyInMinutes:
          minimum: 0
          type: integer
          description: time to cook in minutes
          example: 20
        vegan:
          type: boolean
          description: is the recipe vegan
          example: true
        vegiterian:
          type: boolean
          description: is the recipe vegiterian
          example: true
        glutenfree:
          type: boolean
          description: is the recipe gluten free
          example: true
      description: insert details of the recipe
    InsertRecipe:
      required:
        - recipeId
        - ingredients
        - numberOfServings
        - previewDetails
        - steps
      type: object
      properties:
        recipe:
          type: object
          properties:
            previewDetails:
              $ref: "#/components/schemas/InsertRecipeDetails"
            ingredients:
              type: array
              items:
                $ref: "#/components/schemas/Ingredient"
            steps:
              type: array
              items:
                $ref: "#/components/schemas/Step"
            numberOfServings:
              minimum: 1
              type: integer
              description: number of servings
              example: 4

    Recipe:
      required:
        - recipeId
        - ingredients
        - numberOfServings
        - previewDetails
        - steps
      type: object
      properties:
        recipe:
          type: object
          properties:
            previewDetails:
              $ref: "#/components/schemas/PreviewRecipe"
            ingredients:
              type: array
              items:
                $ref: "#/components/schemas/Ingredient"
            steps:
              type: array
              items:
                $ref: "#/components/schemas/Step"
            numberOfServings:
              minimum: 1
              type: integer
              description: number of servings
              example: 4

    Ingredient:
      required:
        - name
        - ingredient_id
        - imageURL
        - amount
        - units
      type: object
      properties:
        name:
          type: string
          description: name of the ingredient
          example: tomato
        ingredient_id:
          minimum: 0
          type: integer
          description: id of the ingredient
          example: 1
        imageURL:
          type: string
          description: image name of the ingredient
          example: tomato.jpg
        amount:
          minimum: 0
          type: integer
          description: amount of the ingredient
          example: 2
        units:
          type: string
          description: units of the ingredient
          example: kg

    Step:
      required:
        - description
        - step_number
      type: object
      properties:
        step_number:
          minimum: 1
          type: integer
          description: number of the step
          example: 1
        description:
          type: string
          description: step of the recipe
          example: Cook the rice for 20 minutes
    isFavorite:
      required:
        - isfav
      type: object
      properties:
        isfav:
          type: boolean
          description: add or remove from favorites
          example: true
    User:
      required:
        - country
        - email
        - favoriteRecipes
        - firstName
        - lastName
        - password
        - seenRecipes
        - username
      type: object
      properties:
        username:
          type: string
          description: username of the user
          example: IsrealIsreali
        firstname:
          type: string
          description: first name of the user
          example: Isreal
        lastname:
          type: string
          description: last name of the user
          example: Isreali
        country:
          type: string
          description: country of the user
          example: Isreal
        password:
          type: string
          description: password of the user
          example: "123456"
        email:
          type: string
          description: email of the user
          example: bal@bla.com
        favoriteRecipes:
          type: array
          description: favorite recipes of the user
          items:
            $ref: "#/components/schemas/User_favoriteRecipes"
        seenRecipes:
          type: array
          description: seen recipes of the user
          items:
            $ref: "#/components/schemas/User_favoriteRecipes"
    UserPreview:
      required:
        - country
        - firstname
        - lastname
        - username
        - email
      type: object
      properties:
        username:
          type: string
          description: username of the user
          example: IsrealIsreali
        firstname:
          type: string
          description: first name of the user
          example: Isreal
        lastname:
          type: string
          description: last name of the user
          example: Isreali
        country:
          type: string
          description: country of the user
          example: Isreal
        email:
          type: string
          description: email of the user
          example: bla@email.com
    UserLogin:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
          description: username of the user
          example: IsrealIsreali
        password:
          type: string
          description: password of the user
          example: "123456"
    UserRegister:
      required:
        - country
        - email
        - firstname
        - lastname
        - password
        - username
      type: object
      properties:
        username:
          type: string
          description: username of the user
          example: IsrealIsreali
        firstname:
          type: string
          description: first name of the user
          example: Isreal
        lastname:
          type: string
          description: last name of the user
          example: Isreali
        country:
          type: string
          description: country of the user
          example: Isreal
        password:
          type: string
          description: password of the user
          example: "123456"
        email:
          type: string
          description: email of the user
          example: bal@bla.com

    Ingredients_listIngredients:
      properties:
        ingredient:
          $ref: "#/components/schemas/Ingredient"
        amount:
          minimum: 1
          type: integer
          description: amount of the ingredient
          example: 4
    User_favoriteRecipes:
      properties:
        recipe:
          $ref: "#/components/schemas/PreviewRecipe"
    Family:
      required:
        - family_id
        - family_name
      type: object
      properties:
        family_id:
          minimum: 0
          type: integer
          description: id of the family
          example: 1
        family_name:
          type: string
          description: name of the family
          example: Azulay
    FamilyRecipe:
      required:
        - family_id
        - recipe_id
        - data
        - isAdd
      type: object
      properties:
        family_id:
          minimum: 0
          type: integer
          description: id of the family
          example: 1
        recipe_id:
          minimum: 0
          type: integer
          description: id of the recipe
          example: 1
        data:
          type: string
          description: data about the recipe
          example: this recipe done in holidays
        isAdd:
          type: boolean
          description: add or remove the recipe
          example: true
